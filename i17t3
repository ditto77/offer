package offer;

public class i17t3 {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String result=bigAdd("123456789", "9999999999999999999999990");
		System.out.println(result);
		result=null;
	}	
	//这种方法是将整数倒序存储，个位位于下标0的位置
	//但是没有考虑负数的问题，有待改进
	public static String bigAdd(String a, String b) {
		char[] charsA = new StringBuilder(a).reverse().toString().toCharArray();
		char[] charsB = new StringBuilder(b).reverse().toString().toCharArray();
 
		int maxLength = Math.max(charsA.length, charsB.length);
 
		int[] result = new int[maxLength + 1];
 
		int temp = 0;
		for (int i = 0; i <= maxLength; i++) {
			temp = result[i];
 
			if (i < charsA.length) {
				temp += charsA[i] - '0';
			}
 
			if (i < charsB.length) {
				temp += charsB[i] - '0';
			}
 
			if (temp >= 10) {
				temp -= 10;
				result[i + 1] = 1;
			}
 
			result[i] = temp;
 
		}
 //用缓冲区读入，提高效率
		StringBuilder sb = new StringBuilder();
		boolean flag = true;
 
		for (int i = maxLength; i >= 0; i--) {
			if (result[i] == 0 && flag) {
				continue;
			}
 
			flag = false;
			sb.append(result[i]);
		}
 
		return sb.toString();
	}
}
