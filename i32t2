package offer;

import java.util.LinkedList;

public class i32t2 {
//分行从上往下打印一棵树，而且每一层单独打印在一行中
	//需要有两个变量，一个是当前层还没打印的节点数，一个是下一层的节点个数
	public static class TreeNode{
		int value;
		TreeNode root;
		TreeNode left;
		TreeNode right;
		TreeNode(int value){
			this.value=value;
		}
	}
	public static void PrintTree2(TreeNode root) {
		if(root==null)
			return;
		LinkedList<TreeNode> queue=new LinkedList<TreeNode>();
		queue.offer(root);
		TreeNode node=null;
		int curcount=0;
		int nextcount=1;
		while(queue!=null) {
			curcount=nextcount;
			nextcount=0;
			for(int i=1;i<curcount;i++) {
				node=queue.poll();
				System.out.print(node.value+" ");
				if(node.left!=null)
					queue.offer(node.left);
				    nextcount++;
				if(node.right!=null)
					queue.offer(node.right);
					nextcount++;
			}
		}
		System.out.println();//因为要求每行的节点单独打印一行，因此要打印空格
	}
}
