package offer;

import java.util.Stack;

public class i32t3 {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TreeNode root=new TreeNode(1);
		TreeNode node2=new TreeNode(2);
		TreeNode node3=new TreeNode(3);
		TreeNode node4=new TreeNode(4);
		TreeNode node5=new TreeNode(5);
		TreeNode node6=new TreeNode(6);
		TreeNode node7=new TreeNode(7);
		root.left=node2;
		root.right=node3;
		node2.left=node4;
		node2.right=node5;
		node3.left=node6;
		node3.right=node7;
		PrintTree3(root);
	}
	//之字型打印二叉树
	public static class TreeNode{
		int value;
		TreeNode root;
		TreeNode left;
		TreeNode right;
		TreeNode(int value){
			this.value=value;
		}
	}
	public static void PrintTree3(TreeNode root) {
		if(root==null)
			return;
		Stack<TreeNode>stack1=new Stack<TreeNode>();
		Stack<TreeNode>stack2=new Stack<TreeNode>();
		TreeNode node=null;
		stack1.push(root);
		while(!stack1.empty()||!stack2.empty()) {
			while(!stack1.empty()) {//第二层（偶数层）从左向右放入队列中
			node=stack1.pop();
			System.out.print(node.value+" ");
			if(node.left!=null)
				stack2.push(node.left);
			if(node.right!=null)
				stack2.push(node.right);
			}
		    System.out.println();
		    while(!stack2.empty()) {//奇数层从右向左放入队列中
			node=stack2.pop();
			System.out.print(node.value+" ");
			if(node.right!=null)
				stack1.push(node.right);
			if(node.left!=null)
				stack1.push(node.left);
			}
		    System.out.println();//每一层分行
		    }
		}
}
